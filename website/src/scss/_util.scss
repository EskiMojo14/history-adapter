@use "sass:color";
@use "sass:math";

/// Slightly lighten a color
/// @access public
/// @param {Color} $color - color to tint
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}

@function tint($color, $percentage) {
  @return color.mix(white, $color, $percentage);
}

/// Slightly darken a color
/// @access public
/// @param {Color} $color - color to shade
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}

@function shade($color, $percentage) {
  @return color.mix(black, $color, $percentage);
}

@function tone($color, $percentage) {
  @return color.mix(hsl(0, 0%, 50%), $color, $percentage);
}

/// Darken a color if percentage is negative, otherwise lighten it
/// @access public
/// @param {Color} $color - color to shade/tint
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}

@function tintOrShade($color, $percentage) {
  @return if(
    $percentage >= 0%,
    tint($color, math.abs($percentage)),
    shade($color, math.abs($percentage))
  );
}

/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}
